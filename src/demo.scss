$pg-blue: #4C93EA;
$pg-orange: #F67B45;
$swing-angle: 2deg;

body {
  font-size: 100%;
  text-size-adjust: 100%;
  font-family: 'Open Sans', sans-serif;
  color: #666;
  line-height: 1.2;
}

@media screen and (max-width: 30em) {
  body {
    font-size: 90%;
  }

  .step {
    a.button {
      display: block;
    }
  }
}

@media screen and (max-width: 20em) {
  body {
    font-size: 80%;
  }
}

// Customize the Popeye defaults for all modals on the demo page
.popeye-modal-container.demo-container {
  .popeye-modal.demo-modal {
    width: 50%;
    min-width: 20em;
    min-height: 25em;
    text-align: center;

    h2 {
      margin: 1em;
    }

    img {
      height: 12em;
      margin-bottom: 1em;
    }

    .close-button {
      margin: 0.5em auto;
    }
  }
}

// "Zoom!" example:
// 1) Add "demo-container zoom" classes via "containerClass" option
// 2) Change background to orange
// 3) Speed up the modal container animation (defaults to 0.7s)
// 4) Override the modal enter/leave animations to zoom-in and zoom-out
.popeye-modal-container.demo-container.zoom {
  background-color: rgba(246, 123, 69, 0.7);

  &.ng-enter {
    animation-duration: 0.5s;

    .popeye-modal {
      animation: zoom-in 0.5s ease-out;
    }
  }

  &.ng-leave {
    animation-duration: 0.5s;

    .popeye-modal {
      animation: zoom-out 0.5s ease-in;
    }
  }
}

@keyframes zoom-in {
  0% { transform: translate(-50%, -50%) scale(0.1, 0.1) rotateZ(360deg); }
  100% { transform: translate(-50%, -50%) scale(1, 1) rotateZ(0deg); }
}

@keyframes zoom-out {
  0% { transform: translate(-50%, -50%) scale(1, 1) rotateZ(0deg); }
  100% { transform: translate(-50%, -50%) scale(3, 3) rotateZ(-360deg); }
}

// "Small" example:
// 1) Add "demo-modal small" classes via "modalClass" option
// 2) Set width to smaller than normal
.popeye-modal-container.demo-container .popeye-modal.demo-modal.small {
  width: 30%;
  min-height: 0;
}

// "Boring" example:
// 1) Add "demo-container boring" classes via "containerClass" option
// 2) Change background to grey
// 3) Disable all enter/leave animations
.popeye-modal-container.demo-container.boring {
  background-color: rgba(0, 0, 0, 0.2);

  &.ng-enter {
    animation: none;

    .popeye-modal {
      animation: none;
    }
  }

  &.ng-leave {
    animation: none;

    .popeye-modal {
      animation: none;
    }
  }
}

.gh-ribbon {
  position: absolute;
  top: 0;
  right: 0;
  border: 0;
  height: 8em;
}

.pg-logo {
  position: absolute;
  top: 1em;
  left: 1em;
  border: 0;
}

.step {
  max-width: 800px;
  margin: 5em auto;
  padding: 2em 0.5em;
  text-align: center;

  svg.pg-balloon-logo {
    fill: #4c93ea;
    height: 6em;
  }

  &.title p {
    margin: 0.5em auto;
  }
}

.documentation {
  margin-bottom: 4em;

  p, pre {
    text-align: left;
  }
}

h1 {
  font-size: 4em;
  font-weight: 100;
  color: $pg-blue;
  margin-bottom: 0.5em;
}

h2 {
  font-size: 2em;
  font-weight: 100;
  margin-bottom: 0.5em;
}

h3 {
  font-size: 1.3em;
  font-weight: 100;
  margin-bottom: 0.5em;
}

p {
  margin-bottom: 0.5em;
}

span.highlight {
  color: $pg-orange;
  font-weight: 400;
}

span.comment {
  color: #586e75;
  font-weight: 100;
}

.inline-code {
  background: #eee;
  font-family: monospace, monospace;
  color: $pg-blue;
  padding: 0;
  font-size: 1em;
}

pre, code {
  display: block;
  font-family: monospace, monospace;
  background: #eee;
  color: $pg-blue;
  padding: 1em;
  border-radius: 3px;
  margin: 0.5em 0;
  overflow: scroll;
  font-size: 1em;

  &.example {
    text-align: left;
  }
}

a {
  color: $pg-blue;
  text-decoration: none;
  font-weight: 600;

  &.button {
    font-size: 1.5em;
    font-weight: 400;
    color: #fff;
    background: $pg-blue;
    border: 1px solid #aaa;
    border-radius: 3px;
    padding: 0.5em 1.4em;
    margin-top: 1em;
    display: inline-block;
  }
}

table {
  text-align: left;
  background: #eee;
  border-radius: 3px;
  width: 100%;

  thead {
    font-weight: 600;
  }

  tr {
    border-bottom: 1px solid #aaa;
  }

  td + td, th + th {
    border-left: 1px solid #aaa;
  }

  td, th {
    padding: 0.5em;
  }
}

.pg-balloon-container {
  pointer-events: none;
  z-index: 10;
  position: absolute;
  top: 0.3em;
  height: 100%;
  transform: translate(-50%, 0%);

  &.ng-enter {
    transition: transform 3s ease-out;
    transform: translate(-50%, 100%);

    &.ng-enter-active {
      transform: translate(-50%, 0%);
    }
  }

  &.ng-leave {
    transition: transform 6s ease-in;
    transform: translate(-50%, 0%);

    &.ng-leave-active {
      transform: translate(-50%, -200%);
    }
  }

  .pg-balloon {
    background: $pg-blue;
    height: 5em;
    width: 4.375em;
    border-radius: 100%;
    border: 1px solid rgba(0, 0, 0, 0.2);
    animation: swing 4s infinite;
    animation-timing-function: cubic-bezier(0.5, 0, 0.2, 1);

    &::before, &::after {
      content: " ";
      display: inline-block;
      position: absolute;
      border-radius: 100%;
    }

    &::before {
      background: rgba(255, 255, 255, 0.7);
      width: 2.5em;
      height: 2.5em;
      top: 0.625em;
      left: 0.75em;
    }

    &::after {
      background: $pg-blue;
      width: 3em;
      height: 3em;
      top: 0.6875em;
      left: 0.8125em;
    }

    .pg-balloon-knot {
      position: relative;
      top: 4.75em;
      left: 2em;
      width: 0.5em;
      height: 0.5em;
      border-radius: 100%;
      background: $pg-blue;

      .pg-balloon-tail {
        position: relative;
        top: 1.5em;
        width: 2px;
        height: 1.5em;
        background-color: black;
        border-bottom: 1px solid black;
        transform-origin: top center;
        animation: swing 4s infinite;
        animation-timing-function: cubic-bezier(0.5, 0, 0.2, 1);
      }
    }

    .pg-balloon-knot>.pg-balloon-tail {
      top: 0.5em;
      left: 0.2em;
    }
  }
}

@keyframes swing {
  0% { transform: rotate($swing-angle); }
  50% { transform: rotate(-$swing-angle); }
  100% { transform: rotate($swing-angle); }
}

